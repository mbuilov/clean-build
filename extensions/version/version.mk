#----------------------------------------------------------------------------------
# clean-build - non-recursive cross-platform build system based on GNU Make v3.81
# Copyright (C) 2015-2018 Michael M. Builov, https://github.com/mbuilov/clean-build
# Licensed under GPL version 3 or any later version, see COPYING
#----------------------------------------------------------------------------------

ifndef cb_prepare
$(error 'project.mk' of the project build system must be included prior this file)
endif

# as in $(cb_dir)/stub/defs.mk
$(cb_prepare)

# next variables must be defined for this makefile (in the project configuration makefile, like in $(cb_dir)/stub/project.mk)

# product_names_h   - e.g. product_names.h
# product_name      - e.g. Super Product
# product_vendor    - e.g. Acme Corp
# product_copyright - e.g. Copyright (C) Acme Corp
# product_version   - e.g. 1.2.3

ifdef cb_checking
ifneq (,$(filter undefined environment,$(foreach \
  v,product_names_h product_name product_vendor product_copyright product_version,$(origin $v))))
$(error next variables must be defined: $(foreach \
  v,product_names_h product_name product_vendor product_copyright product_version,$(if \
  $(filter undefined environment,$(origin $v)),$v)))
endif
endif

# generate product information header (needed by $(cb_dir)/compilers/msvc/stdres.mk)
# note: 'gen_dir', 'add_generated' - defined in $(cb_dir)/core/_defs.mk
generated := $(gen_dir)/$(product_names_h)
$(call add_generated,$(generated))

# <build_num>  - $(firstword $(buildnumbers))
# <build_date> - $(subst /,-,$(word 2,$(buildnumbers))) $(word 3,$(buildnumbers))
define product_names_template
#ifndef $(call toupper,$(subst .,_,$(product_names_h)))_INCLUDED
#define $(call toupper,$(subst .,_,$(product_names_h)))_INCLUDED
#define PRODUCT_NAME            "$(product_name)"
#define PRODUCT_VENDOR          "$(product_vendor)"
#define PRODUCT_COPYRIGHT       "$(product_copyright)"
#define PRODUCT_VERSION_MAJOR   $(call ver_major,$(product_version))
#define PRODUCT_VERSION_MINOR   $(call ver_minor,$(product_version))
#define PRODUCT_VERSION_PATCH   $(call ver_patch,$(product_version))
#define PRODUCT_OS              "$(CBLD_OS)"
#define PRODUCT_CPU             "$(CBLD_CPU)"
#define PRODUCT_TARGET          "$(CBLD_TARGET)"
#define PRODUCT_BUILD_NUM       <build_num>
#define PRODUCT_BUILD_DATE_TIME "<build_date_time>"
#endif
endef

# build number, date and time, e.g.: 17160 2017/02/16 10:43:09
# note: it is normally generated by 'buildnumber' tool based on the current date and time, but may
#  be specified in the project configuration makefile, e.g. by taking a value from the environment 
product_build:=

$(generated): templ := $(product_names_template)
$(generated): build := $(product_build)
$(generated): $(if $(product_build),,| $(call get_tool,buildnumber))
	$(if \
  $(build),,$(eval $$@: build := $$(shell $$(firstword $$|)))$(if \
  $(build),,$(error 'product_build' is not defined and failed to determine it)))$(call \
  suppress,GEN,$@)$(call sh_print_some_lines,$(subst <build_date_time>,$(subst /,-,$(word \
  2,$(build))) $(word 3,$(build)),$(subst <build_num>,$(firstword $(build)),$(templ)))) > $@

$(define_targets)
