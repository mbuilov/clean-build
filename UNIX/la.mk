#----------------------------------------------------------------------------------
# clean-build - non-recursive build system based on GNU Make
# Copyright (C) 2015-2017 Michael M. Builov, https://github.com/mbuilov/clean-build
# Licensed under GPL version 2 or any later version, see COPYING
#----------------------------------------------------------------------------------

# libtool-archive description file generation

ifndef LIBTOOL_ARCHIVE_NAME

# make name of generated .la file
# $1 - static library name (may be empty if $2 is not empty)
# $2 - dynamic library name (may be empty if $1 is not empty)
LIBTOOL_ARCHIVE_NAME = $(if $1,$(LIB_PREFIX)$1,$(DLL_PREFIX)$2).la

# note: LIBTOOL_ARCHIVE_TEMPLATE may be already defined in $(TOP)/make/project.mk
ifndef LIBTOOL_ARCHIVE_TEMPLATE

# $1 - static library name (may be empty if $2 is not empty)
# $2 - dynamic library name (may be empty if $1 is not empty)
# $3 - library version (major.minor.patch)
# $4 - private dependency libs
# $5 - dependency libraries
# $6 - library installation directory (if not specified, then $(LIBDIR))
define LIBTOOL_ARCHIVE_TEMPLATE
# $(LIBTOOL_ARCHIVE_NAME) - a libtool library file
# Generated by clean-build build system
#
# Please DO NOT delete this file!
# It is needed by libtool for linking the library.

# The name that we can dlopen(3).
dlname='$(if $2,$(DLL_PREFIX)$2$(DLL_SUFFIX)$(addprefix .,$(firstword $(subst ., ,$3))))'

# Names of this library.
library_names='$(if $2,$(addprefix $(DLL_PREFIX)$2,$(addprefix \
  $(DLL_SUFFIX).,$3 $(filter-out $3,$(firstword $(subst ., ,$3)))) $(DLL_SUFFIX)))'

# The name of the static archive.
old_library='$(if $1,$(LIB_PREFIX)$1$(LIB_SUFFIX))'

# Linker flags that cannot go in dependency_libs.
inherited_linker_flags='$4'

# Libraries that this one depends upon.
dependency_libs='$5'

# Names of additional weak libraries provided by this library
weak_library_names=''

# Version information for $(basename $(LIBTOOL_ARCHIVE_NAME)).
current=$(firstword $(subst ., ,$3) 0)
age=$(firstword $(word 2,$(subst ., ,$3)) 0)
revision=$(firstword $(word 3,$(subst ., ,$3)) 0)

# Is this an already installed library?
installed=yes

# Should we warn about portability when linking against -modules?
shouldnotlink=no

# Files to dlopen/dlpreopen
dlopen=''
dlpreopen=''

# Directory that this library needs to be installed in:
libdir='$(if $6,$6,$(if $(LIBDIR),$(LIBDIR),/usr/local/lib))'
endef

endif

# get path to installed .la-file
# $1 - static library name (may be empty if $2 - non-empty)
# $2 - dynamic library name (may be empty if $1 - non-empty)
INSTALLED_LIBTOOL_ARCHIVE ?= '$(DESTDIR)$(LIBDIR)/$(LIBTOOL_ARCHIVE_NAME)'

# $1 - all built libraries (result of $(GET_ALL_LIBS))
# $2 - names of built static libraries, may be empty
# $3 - built dynamic library name, may be empty
INSTALLED_LIBTOOL_ARCHIVES1 = $(foreach r,$1,$(foreach l,$(firstword $(subst ?, ,$r)),$(call \
  INSTALLED_LIBTOOL_ARCHIVE,$(filter $l,$2),$3)))

# get paths to installed .la-files
# $1 - all built libraries (result of $(GET_ALL_LIBS))
# $2 - paths to built static libraries, may be empty
# $3 - path to built dynamic library, may be empty
INSTALLED_LIBTOOL_ARCHIVES ?= $(call INSTALLED_LIBTOOL_ARCHIVES1,$1,$(patsubst \
  $(LIB_PREFIX)%$(LIB_SUFFIX),%,$(notdir $2)),$(patsubst \
  $(DLL_PREFIX)%$(DLL_SUFFIX),%,$(notdir $3)))

# generate contents of .la-file
# $1 - static library name (may be empty if $2 is not empty)
# $2 - dynamic library name (may be empty if $1 is not empty)
LIBTOOL_ARCHIVE_GENERATOR ?= $(call LIBTOOL_ARCHIVE_TEMPLATE,$1,$2,$(MODVER))

# install .la-file
# $1 - static library name (may be empty if $2 - non-empty)
# $2 - dynamic library name (may be empty if $1 - non-empty)
INSTALL_LIBTOOL_ARCHIVE ?= $(call ECHO_INSTALL,$(LIBTOOL_ARCHIVE_GENERATOR),$(INSTALLED_LIBTOOL_ARCHIVE),755)

# $1 - all built libraries (result of $(GET_ALL_LIBS))
# $2 - names of built static libraries, may be empty
# $3 - built dynamic library name, may be empty
INSTALL_LIBTOOL_ARCHIVES1 = $(foreach r,$1,$(foreach l,$(firstword $(subst ?, ,$r)),$(newline)$(call \
  INSTALL_LIBTOOL_ARCHIVE,$(filter $l,$2),$3)))

# install .la-files
# $1 - all built libraries (result of $(GET_ALL_LIBS))
# $2 - paths to built static libraries, may be empty
# $3 - path to built dynamic library, may be empty
INSTALL_LIBTOOL_ARCHIVES ?= $(call INSTALL_LIBTOOL_ARCHIVES1,$1,$(patsubst \
  $(LIB_PREFIX)%$(LIB_SUFFIX),%,$(notdir $2)),$(patsubst \
  $(DLL_PREFIX)%$(DLL_SUFFIX),%,$(notdir $3)))

# protect variables from modifications in target makefiles
$(call CLEAN_BUILD_PROTECT_VARS,LIBTOOL_ARCHIVE_NAME LIBTOOL_ARCHIVE_TEMPLATE \
  INSTALLED_LIBTOOL_ARCHIVE INSTALLED_LIBTOOL_ARCHIVES1 INSTALLED_LIBTOOL_ARCHIVES \
  LIBTOOL_ARCHIVE_GENERATOR INSTALL_LIBTOOL_ARCHIVE INSTALL_LIBTOOL_ARCHIVES1 INSTALL_LIBTOOL_ARCHIVES)

endif
